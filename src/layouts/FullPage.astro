---
import "../styles/global.css";
import Header from "../components/Header.tsx";
import "@fontsource-variable/space-grotesk";
import { ClientRouter } from "astro:transitions";

import PersistedSpace from "@components/PersistedSpace.astro";
import { slide } from "astro:transitions";
interface Props {
  title?: string;
}
const { title = "Kevin Letchford" } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <style>
      html, body {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        background: black;
        /* IMPORTANT: no overflow:hidden here; allow window scroll */
      }
      canvas {
        margin: 0;
        padding: 0;
        display: block;
        width: 100%;
        height: 100%;
      }
    </style>
        <ClientRouter />

  </head>
  <body class=" text-white/90 ">
    <Header client:load transition:persist />

    <!-- WebGL overlay; non-interactive so it won't block scroll -->
    <div id="space-root" class="fixed inset-0 pointer-events-none ">
      <PersistedSpace />
    </div>  
    <slot />
    <script>
      import gsap from "gsap";
      import { ScrollTrigger } from "gsap/ScrollTrigger";
      import { Observer, ScrollToPlugin, ScrollSmoother } from "gsap/all";
      import { SpaceManagerAPI } from "../scripts/space/manager";
        gsap.registerPlugin(ScrollTrigger, ScrollToPlugin, Observer, ScrollSmoother);
      if (!window.__spaceBooted) {
        window.__spaceBooted = true;

        window.gsap = gsap;
        window.ScrollTrigger = ScrollTrigger;
        window.Observer = Observer;
        window.ScrollToPlugin = ScrollToPlugin;
        window.ScrollSmoother = ScrollSmoother;

        window.Smoother = ScrollSmoother.create({
        wrapper: '#wrapper',
        content: '#content'
        });


        gsap.config({ nullTargetWarn: false });

        // âœ… expose your API for inline rerun scripts
        window.SpaceManager = SpaceManagerAPI;

        // an event & promise for late consumers
        window.SpaceReady = Promise.resolve(SpaceManagerAPI);
        window.dispatchEvent(new Event("space:ready"));
      }
    </script>


    
  </body>
</html>
